import java.util.*;

class Infinity {

    private int num = 0;

    public void Infinity(int num) {
        this.num = num;
        int count = 0, choice;
        Infinity If = new Infinity();
        Tutorial Change = new Tutorial();
        AutoMake Am = new AutoMake();
        Passive Pv = new Passive();
        Strategy St = new  Strategy(); 
        while (true) {
            System.out.println("< = = = Main Menu = = = >");
            System.out.println("1. My Team\n2. 전술\n3. 방출하기\n4. 종료하기");
            Scanner NumChoice = new Scanner(System.in);
            choice = NumChoice.nextInt();
            if(choice>4 || choice<1) {
                System.out.println("옳지 않는 번호 선택입니다!");
                break;
            }
            switch (choice) {
                case 1:
                    if (this.num == 1) {
                        Am.AutoMake();
                        If.Infinity(this.num);
                    } else if (this.num == 2) {
                        Pv.PassiveShow();
                    }
                case 2:
                    St.Strategy();
                    If.Infinity(this.num);
                case 3:
                    if(this.num==1)
                        Am.AutoRelease();
                    else if(this.num==2)
                        Pv.PassiveRelease();
                case 4:
                    return;
            }
        }
    }
}

class Squard {

    protected int choice;

    public void Squard() {
        System.out.println("\n< - - - 선수 메뉴 - - - ->");
        System.out.print("1. 선수 자동생성\n2. 선수 수동생성 \n>> ");
        Scanner input = new Scanner(System.in);
        choice = input.nextInt();
        if(choice>2 || choice<1) {
            System.out.println("옳은 번호를 고르세요!");
            return;
        }
        makeTeam();
    }

    public void makeTeam() {
        int count = 0;
        AutoMake AM = new AutoMake();
        Passive Ps = new Passive();
        Infinity If = new Infinity();
        switch (choice) {
            case 1:
                AM.AutoMake();
                If.Infinity(count=1);
                break;
            case 2:
                Ps.Passive();
                If.Infinity(count=2);
                break;
        }
    }
}

class Teamake {

    protected String selectionAuto[];
    protected int selecNumAuto[];
    protected String selecPosition[];
    protected String PassiveSelect[] = new String[11];
    protected int PassiveNum[] = new int[11];
    protected String PassivePosition[] = new String[11];
    static String TeamName;
    static String Director;

    public Teamake() {
    }

    public Teamake(String TeamName, String Director) {
        this.TeamName = TeamName;
        this.Director = Director;
    }

    public String NameCall() {
        return this.Director;
    }

    public String TeamNameCall() {
        return this.TeamName;
    }

}

class AutoMake {
    
    static String selectionAuto[] = {"마르크안드레 테어슈테켄", "제라르 피케", "넬송 세메두", "조르디 알바", "세르히오 부스케츠", "사무엘 움티티", "데니스 수아레스", "이반 라키티치", "파코 알카세르", "루이스 수아레스", "레오넬 메시"};
    static String selecNumAuto[] = {"1", "3", "2", "18", "5", "23", "6", "4", "17", "9", "10"};
    static String selecPosition[] = {"GK", "DF", "DF", "DF", "MF", "DF", "MF", "MF", "FW", "FW", "FW"};
    static Teamake get = new Teamake();
    static String TeamName = get.NameCall();
    static String Director = get.TeamNameCall();
    Scanner input = new Scanner(System.in);
    Infinity If = new Infinity();

    public AutoMake() {
    }

    public void AutoMake() {
        System.out.println("\n< - - - My Team - - - >");
        System.out.println("\n팀 이름 : " + TeamName);
        System.out.println("감독 : " + Director + "\n");
        for (int count = 0; count < selectionAuto.length; count++) {
            System.out.println("선수명 : " + selectionAuto[count] + "\n등번호 : " + selecNumAuto[count] + "\n포지션 : " + selecPosition[count] + "\n");
        }
    }
    
    public void AutoRelease() {
        int check=0;
        System.out.print("방출 하실 선수의 [이름] 또는 [등번호]을/를 입력해주세요! >> ");
        input = new Scanner(System.in); String StrName = input.nextLine();
        for(int count=0; count<selectionAuto.length; count++) {
            if(StrName.equals(selectionAuto[count])||StrName.equals(selecNumAuto[count])) {
                check++;
            }
        }
        for(int count=0; count<selectionAuto.length; count++) {
            if(StrName.equals(selectionAuto[count])||StrName.equals(selecNumAuto[count])) {
                if(check==1){
                    selectionAuto[count]=null; selectionAuto[count]="방출";
                    selecNumAuto[count]=null; selecNumAuto[count]="방출";
                    selecPosition[count]=null; selecPosition[count]="방출";
                }
            }
        }
        if(check>1) {
            System.out.println("이름이 같은 선수가 존재합니다!");
            for(int con=0; con<selectionAuto.length; con++){
                if(StrName.equals(selectionAuto[con]))
                    System.out.println("선수명 : "+selectionAuto[con]+"\n등번호 : "+selecNumAuto[con]+"\n포지션 : "+selecPosition[con]+"\n");
            }
            System.out.print("방출 하실 선수의 [번호]를 입력해주세요! >> ");
            input = new Scanner(System.in); String StrNum = input.next();
            for(int count=0; count<selecNumAuto.length; count++) {
                if(StrNum.equals(selecNumAuto[count])) {
                    selectionAuto[count]=null; selectionAuto[count]="방출";
                    selecNumAuto[count]=null; selecNumAuto[count]="방출";
                    selecPosition[count]=null; selecPosition[count]="방출";
                }
            }
        }
        If.Infinity(1);
    }
}

class Passive {

    static String PassiveSelect[] = new String[11];
    static String PassiveNum[] = new String[11];
    static String PassivePosition[] = new String[11];
    static Teamake get = new Teamake();
    static String TeamName = get.NameCall();
    static String Director = get.TeamNameCall();
    Scanner input = new Scanner(System.in);
    Infinity If = new Infinity();

    public void Passive() {
        Passive Ps = new Passive();
        Squard Sq = new Squard();
        int con=0, numCheck=1;
        System.out.println("< [이름] / [번호] / [포지션] > 순으로 입력");
        System.out.println("Ex): <홍길동 0  GK>");
        for (int count = 0; count < PassiveSelect.length; count++) {
            System.out.print(numCheck+"번째 선수정보 입력 : ");
            numCheck++;
            Scanner input = new Scanner(System.in);
            PassiveSelect[count] = input.next();
            PassiveNum[count] = input.next();
            PassivePosition[count] = input.next();
            for(int cu=0; cu<PassiveNum.length; cu++) {
                if(count!=cu)
                    if(PassiveNum[count].equals(PassiveNum[cu])){
                        System.out.println("등번호가 중복될 수 없습니다! 다시 시도하세요!\n");
                        Ps.Clean();
                        Sq.Squard();
                    }
            }
        }
        System.out.println("\n< - - - My Team - - - >");
        System.out.println("\n팀 이름 : " + TeamName);
        System.out.println("감독 : " + Director + "\n");
        for (int count = 0; count < PassiveSelect.length; count++) {
            System.out.println("선수명 : " + PassiveSelect[count] + "\n등번호 : " + PassiveNum[count] + "\n포지션 : " + PassivePosition[count] + "\n");
        }
    }

    public void PassiveShow() {
        Passive come = new Passive();
        System.out.println("\n< - - - My Team - - - >");
        System.out.println("\n팀 이름 : " + TeamName);
        System.out.println("감독 : " + Director + "\n");
        for (int count = 0; count < PassiveSelect.length; count++) {
            System.out.println("선수명 : " + come.PassiveSelect[count] + "\n등번호 : " + come.PassiveNum[count] + "\n포지션 : " + come.PassivePosition[count] + "\n");
        }
        If.Infinity(2);
    }
    
    public void PassiveRelease() {
        int check=0;
        System.out.print("방출 하실 선수의 [이름] 또는 [등번호]을/를 입력해주세요! >> ");
        input = new Scanner(System.in); String StrName = input.nextLine();
        for(int count=0; count<PassiveSelect.length; count++) {
            if(StrName.equals(PassiveSelect[count]) || StrName.equals(PassiveNum[count])) {
                check++;
            }
        }
        for(int count=0; count<PassiveSelect.length; count++) {
            if(StrName.equals(PassiveSelect[count])||StrName.equals(PassiveNum[count])) {
                if(check==1){
                    PassiveSelect[count]=null; PassiveSelect[count]="방출";
                    PassiveNum[count]=null; PassiveNum[count]="방출";
                    PassivePosition[count]=null; PassivePosition[count]="방출";
                }
            }
            else if(StrName.equals(PassiveNum[count])||StrName.equals(PassiveNum[count])) {
                if(check==1) {
                    PassiveSelect[count]=null; PassiveSelect[count]="방출";
                    PassiveNum[count]=null; PassiveNum[count]="방출";
                    PassivePosition[count]=null; PassivePosition[count]="방출";
                }
            }
        }
        if(check>1) {
            System.out.println("이름이 같은 선수가 존재합니다!");
            for(int con=0; con<PassiveSelect.length; con++){
                if(StrName.equals(PassiveSelect[con]))
                    System.out.println("선수명 : "+PassiveSelect[con]+"\n등번호 : "+PassiveNum[con]+"\n포지션 : "+PassivePosition[con]+"\n");
            }
            System.out.print("방출 하실 선수의 [번호]를 입력해주세요! >> ");
            input = new Scanner(System.in); String StrNum = input.next();
            for(int count=0; count<PassiveNum.length; count++) {
                if(StrNum.equals(PassiveNum[count])) {
                    PassiveSelect[count]=null; PassiveSelect[count]="방출";
                    PassiveNum[count]=null; PassiveNum[count]="방출";
                    PassivePosition[count]=null; PassivePosition[count]="방출";
                }
            }
            If.Infinity(2);
        }
    }
    
    public void Clean() {
        int con=0;
        String arr[] = {"clean1","clean2","clean3","clean4","clean5","clean6","clean7","clean8","clean9","clean10"};
        for(int count=0; count<PassiveNum.length; count++)
            PassiveNum[count]=null; PassiveNum[con]=arr[con];
            con++;
    }
}

class Strategy {
    static int num1; static int num2; static int num3; static int num4;
    static int count=0, save1=0, save2=0, save3=0, save4=0;
    public void Strategy() {
        System.out.println("\n<- - - 전술 설정 - - -> ");
        System.out.print("전술을 입력해주세요 >> ");
        save1=num1; save2=num2; save3=num3; save4=num4;
        Scanner input = new Scanner(System.in);
        num1 = input.nextInt(); num2 = input.nextInt();
        num3 = input.nextInt(); num4 = input.nextInt();
        if(num1+num2+num3+num4!=10){
            System.out.println("전술의 모든 합은 10이여야 합니다!");
            Strategy St = new Strategy();
            St.Strategy();
        }
        if(count>0) {
            System.out.println("이전 전술은 '"+save1+"-"+save2+"-"+save3+"-"+save4+"' 였습니다.");
            System.out.println("바뀐 전술은'"+num1+"-"+num2+"-"+num3+"-"+num4+"' 로 설정되었습니다\n");
            save1*=0; save2*=0; save3*=0; save4*=0;
        }
        if(count==0){
            System.out.println("전술이 '"+num1+"-"+num2+"-"+num3+"-"+num4+"' 로 설정되었습니다");
            save1=num1; save2=num2; save3=num3; save4=num4;
            count++;
        }
    }
}

class Tutorial {

    private String Director;
    private String TeamName;

    public void Name() {
        System.out.print("감독님의 성함은? >> ");
        Scanner InputDirector = new Scanner(System.in);
        Director = InputDirector.nextLine();
    }

    public void Team() {
        System.out.print("감독님의 팀 이름은? >> ");
        Scanner InputTeamName = new Scanner(System.in);
        TeamName = InputTeamName.nextLine();
    }

    public String NameCall() {
        return Director;
    }

    public String TeamNameCall() {
        return TeamName;
    }
}

class T_Main {

    private String save1, save2;

    public void T_Main() {
        System.out.println("= = = = Squard Team 생성  = = = =\n");
        Tutorial Mk = new Tutorial();
        Mk.Name();
        Mk.Team();
        System.out.println("\n= = = = 팀이 생성되었습니다. = = = =");
        save1 = Mk.NameCall();
        save2 = Mk.TeamNameCall();
        myTeam gm = new myTeam(save1, save2);
    }
}

class GameMain {

    protected String myCharacter;
    protected String TeamName;
    protected String Director;
    protected int choice;

    public GameMain() {
    }

    public GameMain(String Director, String TeamName) {
        this.Director = Director;
        this.TeamName = TeamName;
        Teamake give = new Teamake(this.Director, this.TeamName);
    }
}

class myTeam extends GameMain {

    public myTeam() {
    }

    public myTeam(String Director, String TeamName) {
        super(Director, TeamName);
    }
}

public class MakeTeam {

    public static void main(String[] args) {
        T_Main Start = new T_Main();
        Start.T_Main();
        Squard make = new Squard();
        make.Squard();
    }
}
